/*browers often apply defaults instead of using for defaults. We need this rule to apply consistent files so forms will inherit parent element styles instead of browser default*/
button, input, select, textarea {
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  display: block;
  margin: 1rem;
}

input [type=submit] {
  width: 100%;
  background-color: SteelBlue;
}

input [type=password]:focus {
  background-color: seagreen;
  outine: none;
  /*outline none because most browsers have a blue outline*/
}

/*round out corners of input*/
input {
  border-radius: 15px;
}

fieldset {
  border: none;
}

fieldset input {
  display: inline;
}

/*Hide the browser's default checkbox so the <span> customizable checkboxes show up instead. This will make the boxes disappear */
.checkbox input {
  position: absolute;
  opacity: 0;
  curser: pointer;
  height: 0;
  width: 0;
}

/*Customize the labels*/
.checkbox label {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-top: 12px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/*create a custom checkbox*/
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
}

/*On mouse-over, add a gray background color*/
.checkbox label:hover input ~.checkmark {
  background-color: #ccc;
} /*the ~ makes sure that the legend is skipped. A > would only be for direct children*/

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: #2196F3;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

/* Customize the label (the container) */
.container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default radio button */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom radio button */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
  border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the radio button is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: #2196F3;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the indicator (dot/circle) */
.container .checkmark:after {
  top: 9px;
  left: 9px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: white;
